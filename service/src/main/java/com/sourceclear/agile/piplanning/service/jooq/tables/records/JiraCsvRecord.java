/*
 * This file is generated by jOOQ.
 */
package com.sourceclear.agile.piplanning.service.jooq.tables.records;


import com.sourceclear.agile.piplanning.service.jooq.tables.JiraCsv;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JiraCsvRecord extends UpdatableRecordImpl<JiraCsvRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = -1668795555;

    /**
     * Setter for <code>agile.jira_csv.board_id</code>.
     */
    public void setBoardId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>agile.jira_csv.board_id</code>.
     */
    public Long getBoardId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>agile.jira_csv.csv</code>.
     */
    public void setCsv(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>agile.jira_csv.csv</code>.
     */
    public String getCsv() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return JiraCsv.JIRA_CSV.BOARD_ID;
    }

    @Override
    public Field<String> field2() {
        return JiraCsv.JIRA_CSV.CSV;
    }

    @Override
    public Long component1() {
        return getBoardId();
    }

    @Override
    public String component2() {
        return getCsv();
    }

    @Override
    public Long value1() {
        return getBoardId();
    }

    @Override
    public String value2() {
        return getCsv();
    }

    @Override
    public JiraCsvRecord value1(Long value) {
        setBoardId(value);
        return this;
    }

    @Override
    public JiraCsvRecord value2(String value) {
        setCsv(value);
        return this;
    }

    @Override
    public JiraCsvRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JiraCsvRecord
     */
    public JiraCsvRecord() {
        super(JiraCsv.JIRA_CSV);
    }

    /**
     * Create a detached, initialised JiraCsvRecord
     */
    public JiraCsvRecord(Long boardId, String csv) {
        super(JiraCsv.JIRA_CSV);

        set(0, boardId);
        set(1, csv);
    }
}
