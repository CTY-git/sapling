/*
 * This file is generated by jOOQ.
 */
package com.sourceclear.agile.piplanning.service.jooq.tables.records;


import com.sourceclear.agile.piplanning.service.jooq.tables.StoryRequests;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoryRequestsRecord extends UpdatableRecordImpl<StoryRequestsRecord> implements Record11<Long, String, Long, Long, Long, Long, String, Integer, Long, Long, String> {

    private static final long serialVersionUID = -868242932;

    /**
     * Setter for <code>agile.story_requests.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>agile.story_requests.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>agile.story_requests.state</code>.
     */
    public void setState(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>agile.story_requests.state</code>.
     */
    public String getState() {
        return (String) get(1);
    }

    /**
     * Setter for <code>agile.story_requests.from_board_id</code>.
     */
    public void setFromBoardId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>agile.story_requests.from_board_id</code>.
     */
    public Long getFromBoardId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>agile.story_requests.to_board_id</code>.
     */
    public void setToBoardId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>agile.story_requests.to_board_id</code>.
     */
    public Long getToBoardId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>agile.story_requests.from_ticket_id</code>.
     */
    public void setFromTicketId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>agile.story_requests.from_ticket_id</code>.
     */
    public Long getFromTicketId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>agile.story_requests.to_ticket_id</code>.
     */
    public void setToTicketId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>agile.story_requests.to_ticket_id</code>.
     */
    public Long getToTicketId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>agile.story_requests.to_ticket_description</code>.
     */
    public void setToTicketDescription(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>agile.story_requests.to_ticket_description</code>.
     */
    public String getToTicketDescription() {
        return (String) get(6);
    }

    /**
     * Setter for <code>agile.story_requests.to_ticket_weight</code>.
     */
    public void setToTicketWeight(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>agile.story_requests.to_ticket_weight</code>.
     */
    public Integer getToTicketWeight() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>agile.story_requests.to_ticket_epic_id</code>.
     */
    public void setToTicketEpicId(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>agile.story_requests.to_ticket_epic_id</code>.
     */
    public Long getToTicketEpicId() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>agile.story_requests.to_ticket_sprint_id</code>.
     */
    public void setToTicketSprintId(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>agile.story_requests.to_ticket_sprint_id</code>.
     */
    public Long getToTicketSprintId() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>agile.story_requests.notes</code>.
     */
    public void setNotes(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>agile.story_requests.notes</code>.
     */
    public String getNotes() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, String, Long, Long, Long, Long, String, Integer, Long, Long, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, String, Long, Long, Long, Long, String, Integer, Long, Long, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return StoryRequests.STORY_REQUESTS.ID;
    }

    @Override
    public Field<String> field2() {
        return StoryRequests.STORY_REQUESTS.STATE;
    }

    @Override
    public Field<Long> field3() {
        return StoryRequests.STORY_REQUESTS.FROM_BOARD_ID;
    }

    @Override
    public Field<Long> field4() {
        return StoryRequests.STORY_REQUESTS.TO_BOARD_ID;
    }

    @Override
    public Field<Long> field5() {
        return StoryRequests.STORY_REQUESTS.FROM_TICKET_ID;
    }

    @Override
    public Field<Long> field6() {
        return StoryRequests.STORY_REQUESTS.TO_TICKET_ID;
    }

    @Override
    public Field<String> field7() {
        return StoryRequests.STORY_REQUESTS.TO_TICKET_DESCRIPTION;
    }

    @Override
    public Field<Integer> field8() {
        return StoryRequests.STORY_REQUESTS.TO_TICKET_WEIGHT;
    }

    @Override
    public Field<Long> field9() {
        return StoryRequests.STORY_REQUESTS.TO_TICKET_EPIC_ID;
    }

    @Override
    public Field<Long> field10() {
        return StoryRequests.STORY_REQUESTS.TO_TICKET_SPRINT_ID;
    }

    @Override
    public Field<String> field11() {
        return StoryRequests.STORY_REQUESTS.NOTES;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getState();
    }

    @Override
    public Long component3() {
        return getFromBoardId();
    }

    @Override
    public Long component4() {
        return getToBoardId();
    }

    @Override
    public Long component5() {
        return getFromTicketId();
    }

    @Override
    public Long component6() {
        return getToTicketId();
    }

    @Override
    public String component7() {
        return getToTicketDescription();
    }

    @Override
    public Integer component8() {
        return getToTicketWeight();
    }

    @Override
    public Long component9() {
        return getToTicketEpicId();
    }

    @Override
    public Long component10() {
        return getToTicketSprintId();
    }

    @Override
    public String component11() {
        return getNotes();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getState();
    }

    @Override
    public Long value3() {
        return getFromBoardId();
    }

    @Override
    public Long value4() {
        return getToBoardId();
    }

    @Override
    public Long value5() {
        return getFromTicketId();
    }

    @Override
    public Long value6() {
        return getToTicketId();
    }

    @Override
    public String value7() {
        return getToTicketDescription();
    }

    @Override
    public Integer value8() {
        return getToTicketWeight();
    }

    @Override
    public Long value9() {
        return getToTicketEpicId();
    }

    @Override
    public Long value10() {
        return getToTicketSprintId();
    }

    @Override
    public String value11() {
        return getNotes();
    }

    @Override
    public StoryRequestsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public StoryRequestsRecord value2(String value) {
        setState(value);
        return this;
    }

    @Override
    public StoryRequestsRecord value3(Long value) {
        setFromBoardId(value);
        return this;
    }

    @Override
    public StoryRequestsRecord value4(Long value) {
        setToBoardId(value);
        return this;
    }

    @Override
    public StoryRequestsRecord value5(Long value) {
        setFromTicketId(value);
        return this;
    }

    @Override
    public StoryRequestsRecord value6(Long value) {
        setToTicketId(value);
        return this;
    }

    @Override
    public StoryRequestsRecord value7(String value) {
        setToTicketDescription(value);
        return this;
    }

    @Override
    public StoryRequestsRecord value8(Integer value) {
        setToTicketWeight(value);
        return this;
    }

    @Override
    public StoryRequestsRecord value9(Long value) {
        setToTicketEpicId(value);
        return this;
    }

    @Override
    public StoryRequestsRecord value10(Long value) {
        setToTicketSprintId(value);
        return this;
    }

    @Override
    public StoryRequestsRecord value11(String value) {
        setNotes(value);
        return this;
    }

    @Override
    public StoryRequestsRecord values(Long value1, String value2, Long value3, Long value4, Long value5, Long value6, String value7, Integer value8, Long value9, Long value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StoryRequestsRecord
     */
    public StoryRequestsRecord() {
        super(StoryRequests.STORY_REQUESTS);
    }

    /**
     * Create a detached, initialised StoryRequestsRecord
     */
    public StoryRequestsRecord(Long id, String state, Long fromBoardId, Long toBoardId, Long fromTicketId, Long toTicketId, String toTicketDescription, Integer toTicketWeight, Long toTicketEpicId, Long toTicketSprintId, String notes) {
        super(StoryRequests.STORY_REQUESTS);

        set(0, id);
        set(1, state);
        set(2, fromBoardId);
        set(3, toBoardId);
        set(4, fromTicketId);
        set(5, toTicketId);
        set(6, toTicketDescription);
        set(7, toTicketWeight);
        set(8, toTicketEpicId);
        set(9, toTicketSprintId);
        set(10, notes);
    }
}
