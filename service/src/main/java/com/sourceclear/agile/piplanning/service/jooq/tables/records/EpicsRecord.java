/*
 * This file is generated by jOOQ.
 */
package com.sourceclear.agile.piplanning.service.jooq.tables.records;


import com.sourceclear.agile.piplanning.service.jooq.tables.Epics;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EpicsRecord extends UpdatableRecordImpl<EpicsRecord> implements Record4<Long, String, Long, Integer> {

    private static final long serialVersionUID = 101162027;

    /**
     * Setter for <code>agile.epics.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>agile.epics.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>agile.epics.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>agile.epics.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>agile.epics.board_id</code>.
     */
    public void setBoardId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>agile.epics.board_id</code>.
     */
    public Long getBoardId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>agile.epics.priority</code>.
     */
    public void setPriority(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>agile.epics.priority</code>.
     */
    public Integer getPriority() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, Long, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, Long, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Epics.EPICS.ID;
    }

    @Override
    public Field<String> field2() {
        return Epics.EPICS.NAME;
    }

    @Override
    public Field<Long> field3() {
        return Epics.EPICS.BOARD_ID;
    }

    @Override
    public Field<Integer> field4() {
        return Epics.EPICS.PRIORITY;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Long component3() {
        return getBoardId();
    }

    @Override
    public Integer component4() {
        return getPriority();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Long value3() {
        return getBoardId();
    }

    @Override
    public Integer value4() {
        return getPriority();
    }

    @Override
    public EpicsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public EpicsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public EpicsRecord value3(Long value) {
        setBoardId(value);
        return this;
    }

    @Override
    public EpicsRecord value4(Integer value) {
        setPriority(value);
        return this;
    }

    @Override
    public EpicsRecord values(Long value1, String value2, Long value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EpicsRecord
     */
    public EpicsRecord() {
        super(Epics.EPICS);
    }

    /**
     * Create a detached, initialised EpicsRecord
     */
    public EpicsRecord(Long id, String name, Long boardId, Integer priority) {
        super(Epics.EPICS);

        set(0, id);
        set(1, name);
        set(2, boardId);
        set(3, priority);
    }
}
