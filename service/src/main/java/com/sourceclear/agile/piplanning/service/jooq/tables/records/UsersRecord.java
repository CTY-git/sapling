/*
 * This file is generated by jOOQ.
 */
package com.sourceclear.agile.piplanning.service.jooq.tables.records;


import com.sourceclear.agile.piplanning.service.jooq.tables.Users;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record7<Long, String, String, String, String, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 1199272251;

    /**
     * Setter for <code>agile.users.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>agile.users.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>agile.users.email</code>.
     */
    public void setEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>agile.users.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>agile.users.first_name</code>.
     */
    public void setFirstName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>agile.users.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>agile.users.last_name</code>.
     */
    public void setLastName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>agile.users.last_name</code>.
     */
    public String getLastName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>agile.users.password_hash</code>.
     */
    public void setPasswordHash(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>agile.users.password_hash</code>.
     */
    public String getPasswordHash() {
        return (String) get(4);
    }

    /**
     * Setter for <code>agile.users.created_date</code>.
     */
    public void setCreatedDate(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>agile.users.created_date</code>.
     */
    public OffsetDateTime getCreatedDate() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>agile.users.updated_date</code>.
     */
    public void setUpdatedDate(OffsetDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>agile.users.updated_date</code>.
     */
    public OffsetDateTime getUpdatedDate() {
        return (OffsetDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, String, String, String, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, String, String, String, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.FIRST_NAME;
    }

    @Override
    public Field<String> field4() {
        return Users.USERS.LAST_NAME;
    }

    @Override
    public Field<String> field5() {
        return Users.USERS.PASSWORD_HASH;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return Users.USERS.CREATED_DATE;
    }

    @Override
    public Field<OffsetDateTime> field7() {
        return Users.USERS.UPDATED_DATE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEmail();
    }

    @Override
    public String component3() {
        return getFirstName();
    }

    @Override
    public String component4() {
        return getLastName();
    }

    @Override
    public String component5() {
        return getPasswordHash();
    }

    @Override
    public OffsetDateTime component6() {
        return getCreatedDate();
    }

    @Override
    public OffsetDateTime component7() {
        return getUpdatedDate();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEmail();
    }

    @Override
    public String value3() {
        return getFirstName();
    }

    @Override
    public String value4() {
        return getLastName();
    }

    @Override
    public String value5() {
        return getPasswordHash();
    }

    @Override
    public OffsetDateTime value6() {
        return getCreatedDate();
    }

    @Override
    public OffsetDateTime value7() {
        return getUpdatedDate();
    }

    @Override
    public UsersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public UsersRecord value4(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public UsersRecord value5(String value) {
        setPasswordHash(value);
        return this;
    }

    @Override
    public UsersRecord value6(OffsetDateTime value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public UsersRecord value7(OffsetDateTime value) {
        setUpdatedDate(value);
        return this;
    }

    @Override
    public UsersRecord values(Long value1, String value2, String value3, String value4, String value5, OffsetDateTime value6, OffsetDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Long id, String email, String firstName, String lastName, String passwordHash, OffsetDateTime createdDate, OffsetDateTime updatedDate) {
        super(Users.USERS);

        set(0, id);
        set(1, email);
        set(2, firstName);
        set(3, lastName);
        set(4, passwordHash);
        set(5, createdDate);
        set(6, updatedDate);
    }
}
