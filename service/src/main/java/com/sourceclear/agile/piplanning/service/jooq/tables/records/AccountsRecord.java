/*
 * This file is generated by jOOQ.
 */
package com.sourceclear.agile.piplanning.service.jooq.tables.records;


import com.sourceclear.agile.piplanning.service.jooq.tables.Accounts;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsRecord extends UpdatableRecordImpl<AccountsRecord> implements Record5<Long, String, String, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 560779940;

    /**
     * Setter for <code>agile.accounts.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>agile.accounts.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>agile.accounts.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>agile.accounts.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>agile.accounts.type</code>.
     */
    public void setType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>agile.accounts.type</code>.
     */
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>agile.accounts.created_date</code>.
     */
    public void setCreatedDate(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>agile.accounts.created_date</code>.
     */
    public OffsetDateTime getCreatedDate() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>agile.accounts.updated_date</code>.
     */
    public void setUpdatedDate(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>agile.accounts.updated_date</code>.
     */
    public OffsetDateTime getUpdatedDate() {
        return (OffsetDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Accounts.ACCOUNTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Accounts.ACCOUNTS.NAME;
    }

    @Override
    public Field<String> field3() {
        return Accounts.ACCOUNTS.TYPE;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return Accounts.ACCOUNTS.CREATED_DATE;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return Accounts.ACCOUNTS.UPDATED_DATE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getType();
    }

    @Override
    public OffsetDateTime component4() {
        return getCreatedDate();
    }

    @Override
    public OffsetDateTime component5() {
        return getUpdatedDate();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getType();
    }

    @Override
    public OffsetDateTime value4() {
        return getCreatedDate();
    }

    @Override
    public OffsetDateTime value5() {
        return getUpdatedDate();
    }

    @Override
    public AccountsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AccountsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public AccountsRecord value3(String value) {
        setType(value);
        return this;
    }

    @Override
    public AccountsRecord value4(OffsetDateTime value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public AccountsRecord value5(OffsetDateTime value) {
        setUpdatedDate(value);
        return this;
    }

    @Override
    public AccountsRecord values(Long value1, String value2, String value3, OffsetDateTime value4, OffsetDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountsRecord
     */
    public AccountsRecord() {
        super(Accounts.ACCOUNTS);
    }

    /**
     * Create a detached, initialised AccountsRecord
     */
    public AccountsRecord(Long id, String name, String type, OffsetDateTime createdDate, OffsetDateTime updatedDate) {
        super(Accounts.ACCOUNTS);

        set(0, id);
        set(1, name);
        set(2, type);
        set(3, createdDate);
        set(4, updatedDate);
    }
}
