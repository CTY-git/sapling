/*
 * This file is generated by jOOQ.
 */
package com.sourceclear.agile.piplanning.service.jooq.tables.records;


import com.sourceclear.agile.piplanning.service.jooq.tables.TicketPins;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TicketPinsRecord extends UpdatableRecordImpl<TicketPinsRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = -1257683598;

    /**
     * Setter for <code>agile.ticket_pins.ticket_id</code>.
     */
    public void setTicketId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>agile.ticket_pins.ticket_id</code>.
     */
    public Long getTicketId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>agile.ticket_pins.sprint_id</code>.
     */
    public void setSprintId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>agile.ticket_pins.sprint_id</code>.
     */
    public Long getSprintId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>agile.ticket_pins.board_id</code>.
     */
    public void setBoardId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>agile.ticket_pins.board_id</code>.
     */
    public Long getBoardId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TicketPins.TICKET_PINS.TICKET_ID;
    }

    @Override
    public Field<Long> field2() {
        return TicketPins.TICKET_PINS.SPRINT_ID;
    }

    @Override
    public Field<Long> field3() {
        return TicketPins.TICKET_PINS.BOARD_ID;
    }

    @Override
    public Long component1() {
        return getTicketId();
    }

    @Override
    public Long component2() {
        return getSprintId();
    }

    @Override
    public Long component3() {
        return getBoardId();
    }

    @Override
    public Long value1() {
        return getTicketId();
    }

    @Override
    public Long value2() {
        return getSprintId();
    }

    @Override
    public Long value3() {
        return getBoardId();
    }

    @Override
    public TicketPinsRecord value1(Long value) {
        setTicketId(value);
        return this;
    }

    @Override
    public TicketPinsRecord value2(Long value) {
        setSprintId(value);
        return this;
    }

    @Override
    public TicketPinsRecord value3(Long value) {
        setBoardId(value);
        return this;
    }

    @Override
    public TicketPinsRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TicketPinsRecord
     */
    public TicketPinsRecord() {
        super(TicketPins.TICKET_PINS);
    }

    /**
     * Create a detached, initialised TicketPinsRecord
     */
    public TicketPinsRecord(Long ticketId, Long sprintId, Long boardId) {
        super(TicketPins.TICKET_PINS);

        set(0, ticketId);
        set(1, sprintId);
        set(2, boardId);
    }
}
