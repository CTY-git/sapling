/*
 * This file is generated by jOOQ.
 */
package com.sourceclear.agile.piplanning.service.jooq.tables.records;


import com.sourceclear.agile.piplanning.service.jooq.tables.Sprints;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SprintsRecord extends UpdatableRecordImpl<SprintsRecord> implements Record6<Long, Long, String, Integer, Integer, String> {

    private static final long serialVersionUID = -1201244849;

    /**
     * Setter for <code>agile.sprints.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>agile.sprints.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>agile.sprints.board_id</code>.
     */
    public void setBoardId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>agile.sprints.board_id</code>.
     */
    public Long getBoardId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>agile.sprints.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>agile.sprints.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>agile.sprints.capacity</code>.
     */
    public void setCapacity(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>agile.sprints.capacity</code>.
     */
    public Integer getCapacity() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>agile.sprints.ordinal</code>.
     */
    public void setOrdinal(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>agile.sprints.ordinal</code>.
     */
    public Integer getOrdinal() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>agile.sprints.goal</code>.
     */
    public void setGoal(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>agile.sprints.goal</code>.
     */
    public String getGoal() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, String, Integer, Integer, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, String, Integer, Integer, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Sprints.SPRINTS.ID;
    }

    @Override
    public Field<Long> field2() {
        return Sprints.SPRINTS.BOARD_ID;
    }

    @Override
    public Field<String> field3() {
        return Sprints.SPRINTS.NAME;
    }

    @Override
    public Field<Integer> field4() {
        return Sprints.SPRINTS.CAPACITY;
    }

    @Override
    public Field<Integer> field5() {
        return Sprints.SPRINTS.ORDINAL;
    }

    @Override
    public Field<String> field6() {
        return Sprints.SPRINTS.GOAL;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getBoardId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Integer component4() {
        return getCapacity();
    }

    @Override
    public Integer component5() {
        return getOrdinal();
    }

    @Override
    public String component6() {
        return getGoal();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getBoardId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Integer value4() {
        return getCapacity();
    }

    @Override
    public Integer value5() {
        return getOrdinal();
    }

    @Override
    public String value6() {
        return getGoal();
    }

    @Override
    public SprintsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SprintsRecord value2(Long value) {
        setBoardId(value);
        return this;
    }

    @Override
    public SprintsRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public SprintsRecord value4(Integer value) {
        setCapacity(value);
        return this;
    }

    @Override
    public SprintsRecord value5(Integer value) {
        setOrdinal(value);
        return this;
    }

    @Override
    public SprintsRecord value6(String value) {
        setGoal(value);
        return this;
    }

    @Override
    public SprintsRecord values(Long value1, Long value2, String value3, Integer value4, Integer value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SprintsRecord
     */
    public SprintsRecord() {
        super(Sprints.SPRINTS);
    }

    /**
     * Create a detached, initialised SprintsRecord
     */
    public SprintsRecord(Long id, Long boardId, String name, Integer capacity, Integer ordinal, String goal) {
        super(Sprints.SPRINTS);

        set(0, id);
        set(1, boardId);
        set(2, name);
        set(3, capacity);
        set(4, ordinal);
        set(5, goal);
    }
}
