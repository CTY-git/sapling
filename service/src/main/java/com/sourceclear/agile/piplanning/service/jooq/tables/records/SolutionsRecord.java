/*
 * This file is generated by jOOQ.
 */
package com.sourceclear.agile.piplanning.service.jooq.tables.records;


import com.sourceclear.agile.piplanning.service.jooq.tables.Solutions;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SolutionsRecord extends UpdatableRecordImpl<SolutionsRecord> implements Record6<Long, Long, Long, Long, Boolean, Boolean> {

    private static final long serialVersionUID = -35560621;

    /**
     * Setter for <code>agile.solutions.board_id</code>.
     */
    public void setBoardId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>agile.solutions.board_id</code>.
     */
    public Long getBoardId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>agile.solutions.ticket_id</code>.
     */
    public void setTicketId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>agile.solutions.ticket_id</code>.
     */
    public Long getTicketId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>agile.solutions.sprint_id</code>.
     */
    public void setSprintId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>agile.solutions.sprint_id</code>.
     */
    public Long getSprintId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>agile.solutions.id</code>.
     */
    public void setId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>agile.solutions.id</code>.
     */
    public Long getId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>agile.solutions.unassigned</code>.
     */
    public void setUnassigned(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>agile.solutions.unassigned</code>.
     */
    public Boolean getUnassigned() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>agile.solutions.preview</code>.
     */
    public void setPreview(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>agile.solutions.preview</code>.
     */
    public Boolean getPreview() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Long, Long, Boolean, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, Long, Long, Boolean, Boolean> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Solutions.SOLUTIONS.BOARD_ID;
    }

    @Override
    public Field<Long> field2() {
        return Solutions.SOLUTIONS.TICKET_ID;
    }

    @Override
    public Field<Long> field3() {
        return Solutions.SOLUTIONS.SPRINT_ID;
    }

    @Override
    public Field<Long> field4() {
        return Solutions.SOLUTIONS.ID;
    }

    @Override
    public Field<Boolean> field5() {
        return Solutions.SOLUTIONS.UNASSIGNED;
    }

    @Override
    public Field<Boolean> field6() {
        return Solutions.SOLUTIONS.PREVIEW;
    }

    @Override
    public Long component1() {
        return getBoardId();
    }

    @Override
    public Long component2() {
        return getTicketId();
    }

    @Override
    public Long component3() {
        return getSprintId();
    }

    @Override
    public Long component4() {
        return getId();
    }

    @Override
    public Boolean component5() {
        return getUnassigned();
    }

    @Override
    public Boolean component6() {
        return getPreview();
    }

    @Override
    public Long value1() {
        return getBoardId();
    }

    @Override
    public Long value2() {
        return getTicketId();
    }

    @Override
    public Long value3() {
        return getSprintId();
    }

    @Override
    public Long value4() {
        return getId();
    }

    @Override
    public Boolean value5() {
        return getUnassigned();
    }

    @Override
    public Boolean value6() {
        return getPreview();
    }

    @Override
    public SolutionsRecord value1(Long value) {
        setBoardId(value);
        return this;
    }

    @Override
    public SolutionsRecord value2(Long value) {
        setTicketId(value);
        return this;
    }

    @Override
    public SolutionsRecord value3(Long value) {
        setSprintId(value);
        return this;
    }

    @Override
    public SolutionsRecord value4(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SolutionsRecord value5(Boolean value) {
        setUnassigned(value);
        return this;
    }

    @Override
    public SolutionsRecord value6(Boolean value) {
        setPreview(value);
        return this;
    }

    @Override
    public SolutionsRecord values(Long value1, Long value2, Long value3, Long value4, Boolean value5, Boolean value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SolutionsRecord
     */
    public SolutionsRecord() {
        super(Solutions.SOLUTIONS);
    }

    /**
     * Create a detached, initialised SolutionsRecord
     */
    public SolutionsRecord(Long boardId, Long ticketId, Long sprintId, Long id, Boolean unassigned, Boolean preview) {
        super(Solutions.SOLUTIONS);

        set(0, boardId);
        set(1, ticketId);
        set(2, sprintId);
        set(3, id);
        set(4, unassigned);
        set(5, preview);
    }
}
