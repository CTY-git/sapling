/*
 * This file is generated by jOOQ.
 */
package com.sourceclear.agile.piplanning.service.jooq.tables;


import com.sourceclear.agile.piplanning.service.jooq.Agile;
import com.sourceclear.agile.piplanning.service.jooq.Keys;
import com.sourceclear.agile.piplanning.service.jooq.tables.records.EpicsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Epics extends TableImpl<EpicsRecord> {

    private static final long serialVersionUID = 512707470;

    /**
     * The reference instance of <code>agile.epics</code>
     */
    public static final Epics EPICS = new Epics();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EpicsRecord> getRecordType() {
        return EpicsRecord.class;
    }

    /**
     * The column <code>agile.epics.id</code>.
     */
    public final TableField<EpicsRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('epics_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>agile.epics.name</code>.
     */
    public final TableField<EpicsRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>agile.epics.board_id</code>.
     */
    public final TableField<EpicsRecord, Long> BOARD_ID = createField(DSL.name("board_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>agile.epics.priority</code>.
     */
    public final TableField<EpicsRecord, Integer> PRIORITY = createField(DSL.name("priority"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>agile.epics</code> table reference
     */
    public Epics() {
        this(DSL.name("epics"), null);
    }

    /**
     * Create an aliased <code>agile.epics</code> table reference
     */
    public Epics(String alias) {
        this(DSL.name(alias), EPICS);
    }

    /**
     * Create an aliased <code>agile.epics</code> table reference
     */
    public Epics(Name alias) {
        this(alias, EPICS);
    }

    private Epics(Name alias, Table<EpicsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Epics(Name alias, Table<EpicsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Epics(Table<O> child, ForeignKey<O, EpicsRecord> key) {
        super(child, key, EPICS);
    }

    @Override
    public Schema getSchema() {
        return Agile.AGILE;
    }

    @Override
    public Identity<EpicsRecord, Long> getIdentity() {
        return Keys.IDENTITY_EPICS;
    }

    @Override
    public UniqueKey<EpicsRecord> getPrimaryKey() {
        return Keys.EPICS_PKEY;
    }

    @Override
    public List<UniqueKey<EpicsRecord>> getKeys() {
        return Arrays.<UniqueKey<EpicsRecord>>asList(Keys.EPICS_PKEY);
    }

    @Override
    public List<ForeignKey<EpicsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EpicsRecord, ?>>asList(Keys.EPICS__EPICS_BOARD_ID_FKEY);
    }

    public Boards boards() {
        return new Boards(this, Keys.EPICS__EPICS_BOARD_ID_FKEY);
    }

    @Override
    public Epics as(String alias) {
        return new Epics(DSL.name(alias), this);
    }

    @Override
    public Epics as(Name alias) {
        return new Epics(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Epics rename(String name) {
        return new Epics(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Epics rename(Name name) {
        return new Epics(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, Long, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
