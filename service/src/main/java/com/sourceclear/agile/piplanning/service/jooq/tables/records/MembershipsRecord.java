/*
 * This file is generated by jOOQ.
 */
package com.sourceclear.agile.piplanning.service.jooq.tables.records;


import com.sourceclear.agile.piplanning.service.jooq.tables.Memberships;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MembershipsRecord extends UpdatableRecordImpl<MembershipsRecord> implements Record6<Long, Long, Long, String, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 186806281;

    /**
     * Setter for <code>agile.memberships.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>agile.memberships.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>agile.memberships.user_id</code>.
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>agile.memberships.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>agile.memberships.account_id</code>.
     */
    public void setAccountId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>agile.memberships.account_id</code>.
     */
    public Long getAccountId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>agile.memberships.role</code>.
     */
    public void setRole(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>agile.memberships.role</code>.
     */
    public String getRole() {
        return (String) get(3);
    }

    /**
     * Setter for <code>agile.memberships.created_date</code>.
     */
    public void setCreatedDate(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>agile.memberships.created_date</code>.
     */
    public OffsetDateTime getCreatedDate() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>agile.memberships.updated_date</code>.
     */
    public void setUpdatedDate(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>agile.memberships.updated_date</code>.
     */
    public OffsetDateTime getUpdatedDate() {
        return (OffsetDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Long, String, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, Long, String, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Memberships.MEMBERSHIPS.ID;
    }

    @Override
    public Field<Long> field2() {
        return Memberships.MEMBERSHIPS.USER_ID;
    }

    @Override
    public Field<Long> field3() {
        return Memberships.MEMBERSHIPS.ACCOUNT_ID;
    }

    @Override
    public Field<String> field4() {
        return Memberships.MEMBERSHIPS.ROLE;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return Memberships.MEMBERSHIPS.CREATED_DATE;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return Memberships.MEMBERSHIPS.UPDATED_DATE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public Long component3() {
        return getAccountId();
    }

    @Override
    public String component4() {
        return getRole();
    }

    @Override
    public OffsetDateTime component5() {
        return getCreatedDate();
    }

    @Override
    public OffsetDateTime component6() {
        return getUpdatedDate();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public Long value3() {
        return getAccountId();
    }

    @Override
    public String value4() {
        return getRole();
    }

    @Override
    public OffsetDateTime value5() {
        return getCreatedDate();
    }

    @Override
    public OffsetDateTime value6() {
        return getUpdatedDate();
    }

    @Override
    public MembershipsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MembershipsRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public MembershipsRecord value3(Long value) {
        setAccountId(value);
        return this;
    }

    @Override
    public MembershipsRecord value4(String value) {
        setRole(value);
        return this;
    }

    @Override
    public MembershipsRecord value5(OffsetDateTime value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public MembershipsRecord value6(OffsetDateTime value) {
        setUpdatedDate(value);
        return this;
    }

    @Override
    public MembershipsRecord values(Long value1, Long value2, Long value3, String value4, OffsetDateTime value5, OffsetDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MembershipsRecord
     */
    public MembershipsRecord() {
        super(Memberships.MEMBERSHIPS);
    }

    /**
     * Create a detached, initialised MembershipsRecord
     */
    public MembershipsRecord(Long id, Long userId, Long accountId, String role, OffsetDateTime createdDate, OffsetDateTime updatedDate) {
        super(Memberships.MEMBERSHIPS);

        set(0, id);
        set(1, userId);
        set(2, accountId);
        set(3, role);
        set(4, createdDate);
        set(5, updatedDate);
    }
}
