/*
 * This file is generated by jOOQ.
 */
package com.sourceclear.agile.piplanning.service.jooq;


import com.sourceclear.agile.piplanning.service.jooq.tables.Accounts;
import com.sourceclear.agile.piplanning.service.jooq.tables.Boards;
import com.sourceclear.agile.piplanning.service.jooq.tables.Epics;
import com.sourceclear.agile.piplanning.service.jooq.tables.FlywaySchemaHistory;
import com.sourceclear.agile.piplanning.service.jooq.tables.InvalidatedTokens;
import com.sourceclear.agile.piplanning.service.jooq.tables.JiraCsv;
import com.sourceclear.agile.piplanning.service.jooq.tables.Memberships;
import com.sourceclear.agile.piplanning.service.jooq.tables.Notifications;
import com.sourceclear.agile.piplanning.service.jooq.tables.Solutions;
import com.sourceclear.agile.piplanning.service.jooq.tables.Sprints;
import com.sourceclear.agile.piplanning.service.jooq.tables.StoryRequests;
import com.sourceclear.agile.piplanning.service.jooq.tables.TicketDeps;
import com.sourceclear.agile.piplanning.service.jooq.tables.TicketPins;
import com.sourceclear.agile.piplanning.service.jooq.tables.Tickets;
import com.sourceclear.agile.piplanning.service.jooq.tables.Users;
import com.sourceclear.agile.piplanning.service.jooq.tables.records.AccountsRecord;
import com.sourceclear.agile.piplanning.service.jooq.tables.records.BoardsRecord;
import com.sourceclear.agile.piplanning.service.jooq.tables.records.EpicsRecord;
import com.sourceclear.agile.piplanning.service.jooq.tables.records.FlywaySchemaHistoryRecord;
import com.sourceclear.agile.piplanning.service.jooq.tables.records.InvalidatedTokensRecord;
import com.sourceclear.agile.piplanning.service.jooq.tables.records.JiraCsvRecord;
import com.sourceclear.agile.piplanning.service.jooq.tables.records.MembershipsRecord;
import com.sourceclear.agile.piplanning.service.jooq.tables.records.NotificationsRecord;
import com.sourceclear.agile.piplanning.service.jooq.tables.records.SolutionsRecord;
import com.sourceclear.agile.piplanning.service.jooq.tables.records.SprintsRecord;
import com.sourceclear.agile.piplanning.service.jooq.tables.records.StoryRequestsRecord;
import com.sourceclear.agile.piplanning.service.jooq.tables.records.TicketDepsRecord;
import com.sourceclear.agile.piplanning.service.jooq.tables.records.TicketPinsRecord;
import com.sourceclear.agile.piplanning.service.jooq.tables.records.TicketsRecord;
import com.sourceclear.agile.piplanning.service.jooq.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>agile</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccountsRecord, Long> IDENTITY_ACCOUNTS = Identities0.IDENTITY_ACCOUNTS;
    public static final Identity<BoardsRecord, Long> IDENTITY_BOARDS = Identities0.IDENTITY_BOARDS;
    public static final Identity<EpicsRecord, Long> IDENTITY_EPICS = Identities0.IDENTITY_EPICS;
    public static final Identity<InvalidatedTokensRecord, Long> IDENTITY_INVALIDATED_TOKENS = Identities0.IDENTITY_INVALIDATED_TOKENS;
    public static final Identity<MembershipsRecord, Long> IDENTITY_MEMBERSHIPS = Identities0.IDENTITY_MEMBERSHIPS;
    public static final Identity<NotificationsRecord, Long> IDENTITY_NOTIFICATIONS = Identities0.IDENTITY_NOTIFICATIONS;
    public static final Identity<SolutionsRecord, Long> IDENTITY_SOLUTIONS = Identities0.IDENTITY_SOLUTIONS;
    public static final Identity<SprintsRecord, Long> IDENTITY_SPRINTS = Identities0.IDENTITY_SPRINTS;
    public static final Identity<StoryRequestsRecord, Long> IDENTITY_STORY_REQUESTS = Identities0.IDENTITY_STORY_REQUESTS;
    public static final Identity<TicketsRecord, Long> IDENTITY_TICKETS = Identities0.IDENTITY_TICKETS;
    public static final Identity<UsersRecord, Long> IDENTITY_USERS = Identities0.IDENTITY_USERS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountsRecord> ACCOUNTS_PKEY = UniqueKeys0.ACCOUNTS_PKEY;
    public static final UniqueKey<BoardsRecord> BOARDS_PKEY = UniqueKeys0.BOARDS_PKEY;
    public static final UniqueKey<EpicsRecord> EPICS_PKEY = UniqueKeys0.EPICS_PKEY;
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = UniqueKeys0.FLYWAY_SCHEMA_HISTORY_PK;
    public static final UniqueKey<InvalidatedTokensRecord> INVALIDATED_TOKENS_PKEY = UniqueKeys0.INVALIDATED_TOKENS_PKEY;
    public static final UniqueKey<InvalidatedTokensRecord> INVALIDATED_TOKENS_VALUE_KEY = UniqueKeys0.INVALIDATED_TOKENS_VALUE_KEY;
    public static final UniqueKey<JiraCsvRecord> JIRA_CSV_PKEY = UniqueKeys0.JIRA_CSV_PKEY;
    public static final UniqueKey<MembershipsRecord> MEMBERSHIPS_PKEY = UniqueKeys0.MEMBERSHIPS_PKEY;
    public static final UniqueKey<MembershipsRecord> MEMBERSHIPS_USER_ID_ACCOUNT_ID_KEY = UniqueKeys0.MEMBERSHIPS_USER_ID_ACCOUNT_ID_KEY;
    public static final UniqueKey<NotificationsRecord> NOTIFICATIONS_PKEY = UniqueKeys0.NOTIFICATIONS_PKEY;
    public static final UniqueKey<SolutionsRecord> SOLUTIONS_BOARD_ID_TICKET_ID_SPRINT_ID_PREVIEW_KEY = UniqueKeys0.SOLUTIONS_BOARD_ID_TICKET_ID_SPRINT_ID_PREVIEW_KEY;
    public static final UniqueKey<SolutionsRecord> SOLUTIONS_PKEY = UniqueKeys0.SOLUTIONS_PKEY;
    public static final UniqueKey<SprintsRecord> SPRINTS_PKEY = UniqueKeys0.SPRINTS_PKEY;
    public static final UniqueKey<StoryRequestsRecord> STORY_REQUESTS_PKEY = UniqueKeys0.STORY_REQUESTS_PKEY;
    public static final UniqueKey<TicketDepsRecord> TICKET_DEPS_PKEY = UniqueKeys0.TICKET_DEPS_PKEY;
    public static final UniqueKey<TicketPinsRecord> TICKET_PINS_PKEY = UniqueKeys0.TICKET_PINS_PKEY;
    public static final UniqueKey<TicketPinsRecord> TICKET_PINS_UNIQUE = UniqueKeys0.TICKET_PINS_UNIQUE;
    public static final UniqueKey<TicketsRecord> TICKETS_PKEY = UniqueKeys0.TICKETS_PKEY;
    public static final UniqueKey<UsersRecord> USERS_PKEY = UniqueKeys0.USERS_PKEY;
    public static final UniqueKey<UsersRecord> USERS_EMAIL_KEY = UniqueKeys0.USERS_EMAIL_KEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BoardsRecord, UsersRecord> BOARDS__BOARDS_OWNER_FKEY = ForeignKeys0.BOARDS__BOARDS_OWNER_FKEY;
    public static final ForeignKey<EpicsRecord, BoardsRecord> EPICS__EPICS_BOARD_ID_FKEY = ForeignKeys0.EPICS__EPICS_BOARD_ID_FKEY;
    public static final ForeignKey<InvalidatedTokensRecord, UsersRecord> INVALIDATED_TOKENS__INVALIDATED_TOKENS_USER_ID_FKEY = ForeignKeys0.INVALIDATED_TOKENS__INVALIDATED_TOKENS_USER_ID_FKEY;
    public static final ForeignKey<JiraCsvRecord, BoardsRecord> JIRA_CSV__JIRA_CSV_BOARD_ID_FKEY = ForeignKeys0.JIRA_CSV__JIRA_CSV_BOARD_ID_FKEY;
    public static final ForeignKey<MembershipsRecord, UsersRecord> MEMBERSHIPS__MEMBERSHIPS_USER_ID_FKEY = ForeignKeys0.MEMBERSHIPS__MEMBERSHIPS_USER_ID_FKEY;
    public static final ForeignKey<MembershipsRecord, AccountsRecord> MEMBERSHIPS__MEMBERSHIPS_ACCOUNT_ID_FKEY = ForeignKeys0.MEMBERSHIPS__MEMBERSHIPS_ACCOUNT_ID_FKEY;
    public static final ForeignKey<NotificationsRecord, BoardsRecord> NOTIFICATIONS__NOTIFICATIONS_RECIPIENT_ID_FKEY = ForeignKeys0.NOTIFICATIONS__NOTIFICATIONS_RECIPIENT_ID_FKEY;
    public static final ForeignKey<NotificationsRecord, StoryRequestsRecord> NOTIFICATIONS__NOTIFICATIONS_STORY_REQUEST_ID_FKEY = ForeignKeys0.NOTIFICATIONS__NOTIFICATIONS_STORY_REQUEST_ID_FKEY;
    public static final ForeignKey<SolutionsRecord, BoardsRecord> SOLUTIONS__SOLUTIONS_BOARD_ID_FKEY = ForeignKeys0.SOLUTIONS__SOLUTIONS_BOARD_ID_FKEY;
    public static final ForeignKey<SolutionsRecord, TicketsRecord> SOLUTIONS__SOLUTIONS_TICKET_ID_FKEY = ForeignKeys0.SOLUTIONS__SOLUTIONS_TICKET_ID_FKEY;
    public static final ForeignKey<SolutionsRecord, SprintsRecord> SOLUTIONS__SOLUTIONS_SPRINT_ID_FKEY = ForeignKeys0.SOLUTIONS__SOLUTIONS_SPRINT_ID_FKEY;
    public static final ForeignKey<SprintsRecord, BoardsRecord> SPRINTS__SPRINTS_BOARD_ID_FKEY = ForeignKeys0.SPRINTS__SPRINTS_BOARD_ID_FKEY;
    public static final ForeignKey<StoryRequestsRecord, BoardsRecord> STORY_REQUESTS__STORY_REQUESTS_FROM_BOARD_ID_FKEY = ForeignKeys0.STORY_REQUESTS__STORY_REQUESTS_FROM_BOARD_ID_FKEY;
    public static final ForeignKey<StoryRequestsRecord, BoardsRecord> STORY_REQUESTS__STORY_REQUESTS_TO_BOARD_ID_FKEY = ForeignKeys0.STORY_REQUESTS__STORY_REQUESTS_TO_BOARD_ID_FKEY;
    public static final ForeignKey<StoryRequestsRecord, TicketsRecord> STORY_REQUESTS__STORY_REQUESTS_FROM_TICKET_ID_FKEY = ForeignKeys0.STORY_REQUESTS__STORY_REQUESTS_FROM_TICKET_ID_FKEY;
    public static final ForeignKey<StoryRequestsRecord, TicketsRecord> STORY_REQUESTS__STORY_REQUESTS_TO_TICKET_ID_FKEY = ForeignKeys0.STORY_REQUESTS__STORY_REQUESTS_TO_TICKET_ID_FKEY;
    public static final ForeignKey<StoryRequestsRecord, EpicsRecord> STORY_REQUESTS__STORY_REQUESTS_TO_TICKET_EPIC_ID_FKEY = ForeignKeys0.STORY_REQUESTS__STORY_REQUESTS_TO_TICKET_EPIC_ID_FKEY;
    public static final ForeignKey<StoryRequestsRecord, SprintsRecord> STORY_REQUESTS__STORY_REQUESTS_TO_TICKET_SPRINT_ID_FKEY = ForeignKeys0.STORY_REQUESTS__STORY_REQUESTS_TO_TICKET_SPRINT_ID_FKEY;
    public static final ForeignKey<TicketDepsRecord, TicketsRecord> TICKET_DEPS__TICKET_DEPS_FROM_TICKET_ID_FKEY = ForeignKeys0.TICKET_DEPS__TICKET_DEPS_FROM_TICKET_ID_FKEY;
    public static final ForeignKey<TicketDepsRecord, TicketsRecord> TICKET_DEPS__TICKET_DEPS_TO_TICKET_ID_FKEY = ForeignKeys0.TICKET_DEPS__TICKET_DEPS_TO_TICKET_ID_FKEY;
    public static final ForeignKey<TicketDepsRecord, BoardsRecord> TICKET_DEPS__TICKET_DEPS_BOARD_ID_FKEY = ForeignKeys0.TICKET_DEPS__TICKET_DEPS_BOARD_ID_FKEY;
    public static final ForeignKey<TicketPinsRecord, TicketsRecord> TICKET_PINS__TICKET_PINS_TICKET_ID_FKEY = ForeignKeys0.TICKET_PINS__TICKET_PINS_TICKET_ID_FKEY;
    public static final ForeignKey<TicketPinsRecord, SprintsRecord> TICKET_PINS__TICKET_PINS_SPRINT_ID_FKEY = ForeignKeys0.TICKET_PINS__TICKET_PINS_SPRINT_ID_FKEY;
    public static final ForeignKey<TicketPinsRecord, BoardsRecord> TICKET_PINS__TICKET_PINS_BOARD_ID_FKEY = ForeignKeys0.TICKET_PINS__TICKET_PINS_BOARD_ID_FKEY;
    public static final ForeignKey<TicketsRecord, BoardsRecord> TICKETS__TICKETS_BOARD_ID_FKEY = ForeignKeys0.TICKETS__TICKETS_BOARD_ID_FKEY;
    public static final ForeignKey<TicketsRecord, EpicsRecord> TICKETS__TICKETS_EPIC_ID_FKEY = ForeignKeys0.TICKETS__TICKETS_EPIC_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AccountsRecord, Long> IDENTITY_ACCOUNTS = Internal.createIdentity(Accounts.ACCOUNTS, Accounts.ACCOUNTS.ID);
        public static Identity<BoardsRecord, Long> IDENTITY_BOARDS = Internal.createIdentity(Boards.BOARDS, Boards.BOARDS.ID);
        public static Identity<EpicsRecord, Long> IDENTITY_EPICS = Internal.createIdentity(Epics.EPICS, Epics.EPICS.ID);
        public static Identity<InvalidatedTokensRecord, Long> IDENTITY_INVALIDATED_TOKENS = Internal.createIdentity(InvalidatedTokens.INVALIDATED_TOKENS, InvalidatedTokens.INVALIDATED_TOKENS.ID);
        public static Identity<MembershipsRecord, Long> IDENTITY_MEMBERSHIPS = Internal.createIdentity(Memberships.MEMBERSHIPS, Memberships.MEMBERSHIPS.ID);
        public static Identity<NotificationsRecord, Long> IDENTITY_NOTIFICATIONS = Internal.createIdentity(Notifications.NOTIFICATIONS, Notifications.NOTIFICATIONS.ID);
        public static Identity<SolutionsRecord, Long> IDENTITY_SOLUTIONS = Internal.createIdentity(Solutions.SOLUTIONS, Solutions.SOLUTIONS.ID);
        public static Identity<SprintsRecord, Long> IDENTITY_SPRINTS = Internal.createIdentity(Sprints.SPRINTS, Sprints.SPRINTS.ID);
        public static Identity<StoryRequestsRecord, Long> IDENTITY_STORY_REQUESTS = Internal.createIdentity(StoryRequests.STORY_REQUESTS, StoryRequests.STORY_REQUESTS.ID);
        public static Identity<TicketsRecord, Long> IDENTITY_TICKETS = Internal.createIdentity(Tickets.TICKETS, Tickets.TICKETS.ID);
        public static Identity<UsersRecord, Long> IDENTITY_USERS = Internal.createIdentity(Users.USERS, Users.USERS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountsRecord> ACCOUNTS_PKEY = Internal.createUniqueKey(Accounts.ACCOUNTS, "accounts_pkey", new TableField[] { Accounts.ACCOUNTS.ID }, true);
        public static final UniqueKey<BoardsRecord> BOARDS_PKEY = Internal.createUniqueKey(Boards.BOARDS, "boards_pkey", new TableField[] { Boards.BOARDS.ID }, true);
        public static final UniqueKey<EpicsRecord> EPICS_PKEY = Internal.createUniqueKey(Epics.EPICS, "epics_pkey", new TableField[] { Epics.EPICS.ID }, true);
        public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "flyway_schema_history_pk", new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
        public static final UniqueKey<InvalidatedTokensRecord> INVALIDATED_TOKENS_PKEY = Internal.createUniqueKey(InvalidatedTokens.INVALIDATED_TOKENS, "invalidated_tokens_pkey", new TableField[] { InvalidatedTokens.INVALIDATED_TOKENS.ID }, true);
        public static final UniqueKey<InvalidatedTokensRecord> INVALIDATED_TOKENS_VALUE_KEY = Internal.createUniqueKey(InvalidatedTokens.INVALIDATED_TOKENS, "invalidated_tokens_value_key", new TableField[] { InvalidatedTokens.INVALIDATED_TOKENS.VALUE }, true);
        public static final UniqueKey<JiraCsvRecord> JIRA_CSV_PKEY = Internal.createUniqueKey(JiraCsv.JIRA_CSV, "jira_csv_pkey", new TableField[] { JiraCsv.JIRA_CSV.BOARD_ID }, true);
        public static final UniqueKey<MembershipsRecord> MEMBERSHIPS_PKEY = Internal.createUniqueKey(Memberships.MEMBERSHIPS, "memberships_pkey", new TableField[] { Memberships.MEMBERSHIPS.ID }, true);
        public static final UniqueKey<MembershipsRecord> MEMBERSHIPS_USER_ID_ACCOUNT_ID_KEY = Internal.createUniqueKey(Memberships.MEMBERSHIPS, "memberships_user_id_account_id_key", new TableField[] { Memberships.MEMBERSHIPS.USER_ID, Memberships.MEMBERSHIPS.ACCOUNT_ID }, true);
        public static final UniqueKey<NotificationsRecord> NOTIFICATIONS_PKEY = Internal.createUniqueKey(Notifications.NOTIFICATIONS, "notifications_pkey", new TableField[] { Notifications.NOTIFICATIONS.ID }, true);
        public static final UniqueKey<SolutionsRecord> SOLUTIONS_BOARD_ID_TICKET_ID_SPRINT_ID_PREVIEW_KEY = Internal.createUniqueKey(Solutions.SOLUTIONS, "solutions_board_id_ticket_id_sprint_id_preview_key", new TableField[] { Solutions.SOLUTIONS.BOARD_ID, Solutions.SOLUTIONS.TICKET_ID, Solutions.SOLUTIONS.SPRINT_ID, Solutions.SOLUTIONS.PREVIEW }, true);
        public static final UniqueKey<SolutionsRecord> SOLUTIONS_PKEY = Internal.createUniqueKey(Solutions.SOLUTIONS, "solutions_pkey", new TableField[] { Solutions.SOLUTIONS.ID }, true);
        public static final UniqueKey<SprintsRecord> SPRINTS_PKEY = Internal.createUniqueKey(Sprints.SPRINTS, "sprints_pkey", new TableField[] { Sprints.SPRINTS.ID }, true);
        public static final UniqueKey<StoryRequestsRecord> STORY_REQUESTS_PKEY = Internal.createUniqueKey(StoryRequests.STORY_REQUESTS, "story_requests_pkey", new TableField[] { StoryRequests.STORY_REQUESTS.ID }, true);
        public static final UniqueKey<TicketDepsRecord> TICKET_DEPS_PKEY = Internal.createUniqueKey(TicketDeps.TICKET_DEPS, "ticket_deps_pkey", new TableField[] { TicketDeps.TICKET_DEPS.FROM_TICKET_ID, TicketDeps.TICKET_DEPS.TO_TICKET_ID }, true);
        public static final UniqueKey<TicketPinsRecord> TICKET_PINS_PKEY = Internal.createUniqueKey(TicketPins.TICKET_PINS, "ticket_pins_pkey", new TableField[] { TicketPins.TICKET_PINS.TICKET_ID, TicketPins.TICKET_PINS.SPRINT_ID }, true);
        public static final UniqueKey<TicketPinsRecord> TICKET_PINS_UNIQUE = Internal.createUniqueKey(TicketPins.TICKET_PINS, "ticket_pins_unique", new TableField[] { TicketPins.TICKET_PINS.TICKET_ID, TicketPins.TICKET_PINS.BOARD_ID }, true);
        public static final UniqueKey<TicketsRecord> TICKETS_PKEY = Internal.createUniqueKey(Tickets.TICKETS, "tickets_pkey", new TableField[] { Tickets.TICKETS.ID }, true);
        public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS, "users_pkey", new TableField[] { Users.USERS.ID }, true);
        public static final UniqueKey<UsersRecord> USERS_EMAIL_KEY = Internal.createUniqueKey(Users.USERS, "users_email_key", new TableField[] { Users.USERS.EMAIL }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<BoardsRecord, UsersRecord> BOARDS__BOARDS_OWNER_FKEY = Internal.createForeignKey(Keys.USERS_PKEY, Boards.BOARDS, "boards_owner_fkey", new TableField[] { Boards.BOARDS.OWNER }, true);
        public static final ForeignKey<EpicsRecord, BoardsRecord> EPICS__EPICS_BOARD_ID_FKEY = Internal.createForeignKey(Keys.BOARDS_PKEY, Epics.EPICS, "epics_board_id_fkey", new TableField[] { Epics.EPICS.BOARD_ID }, true);
        public static final ForeignKey<InvalidatedTokensRecord, UsersRecord> INVALIDATED_TOKENS__INVALIDATED_TOKENS_USER_ID_FKEY = Internal.createForeignKey(Keys.USERS_PKEY, InvalidatedTokens.INVALIDATED_TOKENS, "invalidated_tokens_user_id_fkey", new TableField[] { InvalidatedTokens.INVALIDATED_TOKENS.USER_ID }, true);
        public static final ForeignKey<JiraCsvRecord, BoardsRecord> JIRA_CSV__JIRA_CSV_BOARD_ID_FKEY = Internal.createForeignKey(Keys.BOARDS_PKEY, JiraCsv.JIRA_CSV, "jira_csv_board_id_fkey", new TableField[] { JiraCsv.JIRA_CSV.BOARD_ID }, true);
        public static final ForeignKey<MembershipsRecord, UsersRecord> MEMBERSHIPS__MEMBERSHIPS_USER_ID_FKEY = Internal.createForeignKey(Keys.USERS_PKEY, Memberships.MEMBERSHIPS, "memberships_user_id_fkey", new TableField[] { Memberships.MEMBERSHIPS.USER_ID }, true);
        public static final ForeignKey<MembershipsRecord, AccountsRecord> MEMBERSHIPS__MEMBERSHIPS_ACCOUNT_ID_FKEY = Internal.createForeignKey(Keys.ACCOUNTS_PKEY, Memberships.MEMBERSHIPS, "memberships_account_id_fkey", new TableField[] { Memberships.MEMBERSHIPS.ACCOUNT_ID }, true);
        public static final ForeignKey<NotificationsRecord, BoardsRecord> NOTIFICATIONS__NOTIFICATIONS_RECIPIENT_ID_FKEY = Internal.createForeignKey(Keys.BOARDS_PKEY, Notifications.NOTIFICATIONS, "notifications_recipient_id_fkey", new TableField[] { Notifications.NOTIFICATIONS.RECIPIENT_ID }, true);
        public static final ForeignKey<NotificationsRecord, StoryRequestsRecord> NOTIFICATIONS__NOTIFICATIONS_STORY_REQUEST_ID_FKEY = Internal.createForeignKey(Keys.STORY_REQUESTS_PKEY, Notifications.NOTIFICATIONS, "notifications_story_request_id_fkey", new TableField[] { Notifications.NOTIFICATIONS.STORY_REQUEST_ID }, true);
        public static final ForeignKey<SolutionsRecord, BoardsRecord> SOLUTIONS__SOLUTIONS_BOARD_ID_FKEY = Internal.createForeignKey(Keys.BOARDS_PKEY, Solutions.SOLUTIONS, "solutions_board_id_fkey", new TableField[] { Solutions.SOLUTIONS.BOARD_ID }, true);
        public static final ForeignKey<SolutionsRecord, TicketsRecord> SOLUTIONS__SOLUTIONS_TICKET_ID_FKEY = Internal.createForeignKey(Keys.TICKETS_PKEY, Solutions.SOLUTIONS, "solutions_ticket_id_fkey", new TableField[] { Solutions.SOLUTIONS.TICKET_ID }, true);
        public static final ForeignKey<SolutionsRecord, SprintsRecord> SOLUTIONS__SOLUTIONS_SPRINT_ID_FKEY = Internal.createForeignKey(Keys.SPRINTS_PKEY, Solutions.SOLUTIONS, "solutions_sprint_id_fkey", new TableField[] { Solutions.SOLUTIONS.SPRINT_ID }, true);
        public static final ForeignKey<SprintsRecord, BoardsRecord> SPRINTS__SPRINTS_BOARD_ID_FKEY = Internal.createForeignKey(Keys.BOARDS_PKEY, Sprints.SPRINTS, "sprints_board_id_fkey", new TableField[] { Sprints.SPRINTS.BOARD_ID }, true);
        public static final ForeignKey<StoryRequestsRecord, BoardsRecord> STORY_REQUESTS__STORY_REQUESTS_FROM_BOARD_ID_FKEY = Internal.createForeignKey(Keys.BOARDS_PKEY, StoryRequests.STORY_REQUESTS, "story_requests_from_board_id_fkey", new TableField[] { StoryRequests.STORY_REQUESTS.FROM_BOARD_ID }, true);
        public static final ForeignKey<StoryRequestsRecord, BoardsRecord> STORY_REQUESTS__STORY_REQUESTS_TO_BOARD_ID_FKEY = Internal.createForeignKey(Keys.BOARDS_PKEY, StoryRequests.STORY_REQUESTS, "story_requests_to_board_id_fkey", new TableField[] { StoryRequests.STORY_REQUESTS.TO_BOARD_ID }, true);
        public static final ForeignKey<StoryRequestsRecord, TicketsRecord> STORY_REQUESTS__STORY_REQUESTS_FROM_TICKET_ID_FKEY = Internal.createForeignKey(Keys.TICKETS_PKEY, StoryRequests.STORY_REQUESTS, "story_requests_from_ticket_id_fkey", new TableField[] { StoryRequests.STORY_REQUESTS.FROM_TICKET_ID }, true);
        public static final ForeignKey<StoryRequestsRecord, TicketsRecord> STORY_REQUESTS__STORY_REQUESTS_TO_TICKET_ID_FKEY = Internal.createForeignKey(Keys.TICKETS_PKEY, StoryRequests.STORY_REQUESTS, "story_requests_to_ticket_id_fkey", new TableField[] { StoryRequests.STORY_REQUESTS.TO_TICKET_ID }, true);
        public static final ForeignKey<StoryRequestsRecord, EpicsRecord> STORY_REQUESTS__STORY_REQUESTS_TO_TICKET_EPIC_ID_FKEY = Internal.createForeignKey(Keys.EPICS_PKEY, StoryRequests.STORY_REQUESTS, "story_requests_to_ticket_epic_id_fkey", new TableField[] { StoryRequests.STORY_REQUESTS.TO_TICKET_EPIC_ID }, true);
        public static final ForeignKey<StoryRequestsRecord, SprintsRecord> STORY_REQUESTS__STORY_REQUESTS_TO_TICKET_SPRINT_ID_FKEY = Internal.createForeignKey(Keys.SPRINTS_PKEY, StoryRequests.STORY_REQUESTS, "story_requests_to_ticket_sprint_id_fkey", new TableField[] { StoryRequests.STORY_REQUESTS.TO_TICKET_SPRINT_ID }, true);
        public static final ForeignKey<TicketDepsRecord, TicketsRecord> TICKET_DEPS__TICKET_DEPS_FROM_TICKET_ID_FKEY = Internal.createForeignKey(Keys.TICKETS_PKEY, TicketDeps.TICKET_DEPS, "ticket_deps_from_ticket_id_fkey", new TableField[] { TicketDeps.TICKET_DEPS.FROM_TICKET_ID }, true);
        public static final ForeignKey<TicketDepsRecord, TicketsRecord> TICKET_DEPS__TICKET_DEPS_TO_TICKET_ID_FKEY = Internal.createForeignKey(Keys.TICKETS_PKEY, TicketDeps.TICKET_DEPS, "ticket_deps_to_ticket_id_fkey", new TableField[] { TicketDeps.TICKET_DEPS.TO_TICKET_ID }, true);
        public static final ForeignKey<TicketDepsRecord, BoardsRecord> TICKET_DEPS__TICKET_DEPS_BOARD_ID_FKEY = Internal.createForeignKey(Keys.BOARDS_PKEY, TicketDeps.TICKET_DEPS, "ticket_deps_board_id_fkey", new TableField[] { TicketDeps.TICKET_DEPS.BOARD_ID }, true);
        public static final ForeignKey<TicketPinsRecord, TicketsRecord> TICKET_PINS__TICKET_PINS_TICKET_ID_FKEY = Internal.createForeignKey(Keys.TICKETS_PKEY, TicketPins.TICKET_PINS, "ticket_pins_ticket_id_fkey", new TableField[] { TicketPins.TICKET_PINS.TICKET_ID }, true);
        public static final ForeignKey<TicketPinsRecord, SprintsRecord> TICKET_PINS__TICKET_PINS_SPRINT_ID_FKEY = Internal.createForeignKey(Keys.SPRINTS_PKEY, TicketPins.TICKET_PINS, "ticket_pins_sprint_id_fkey", new TableField[] { TicketPins.TICKET_PINS.SPRINT_ID }, true);
        public static final ForeignKey<TicketPinsRecord, BoardsRecord> TICKET_PINS__TICKET_PINS_BOARD_ID_FKEY = Internal.createForeignKey(Keys.BOARDS_PKEY, TicketPins.TICKET_PINS, "ticket_pins_board_id_fkey", new TableField[] { TicketPins.TICKET_PINS.BOARD_ID }, true);
        public static final ForeignKey<TicketsRecord, BoardsRecord> TICKETS__TICKETS_BOARD_ID_FKEY = Internal.createForeignKey(Keys.BOARDS_PKEY, Tickets.TICKETS, "tickets_board_id_fkey", new TableField[] { Tickets.TICKETS.BOARD_ID }, true);
        public static final ForeignKey<TicketsRecord, EpicsRecord> TICKETS__TICKETS_EPIC_ID_FKEY = Internal.createForeignKey(Keys.EPICS_PKEY, Tickets.TICKETS, "tickets_epic_id_fkey", new TableField[] { Tickets.TICKETS.EPIC_ID }, true);
    }
}
